name: Voice Generation Ending (Minimal)
on:
  workflow_call:
    inputs:
      script-text:
        required: true
        type: string
      voice-config:
        required: true
        type: string
    outputs:
      audio-url:
        value: ${{ jobs.generate.outputs.url }}
      audio-file:
        value: ${{ jobs.generate.outputs.file }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.voice.outputs.audio-url }}
      file: ${{ steps.voice.outputs.audio-file }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download voice UUID artifact
        uses: actions/download-artifact@v4
        with:
          name: voice-uuid
          path: radio-workflow/temp
      
      - name: Generate voice with aivis-cloud-api
        id: voice
        run: |
          echo "::group::🎤 音声生成 (エンディング)"
          echo "📝 入力テキスト: ${{ inputs.script-text }}"
          echo "⚙️ 音声設定: ${{ inputs.voice-config }}"
          echo "🚀 開始時刻: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # USE_UUID.mdから音声IDを読み込む
          if [ -f "radio-workflow/temp/USE_UUID.md" ]; then
            SELECTED_VOICE_ID=$(grep "Voice UUID:" radio-workflow/temp/USE_UUID.md | cut -d' ' -f3)
            echo "✅ USE_UUID.mdから音声IDを読み込みました: $SELECTED_VOICE_ID"
          else
            echo "::error::❌ USE_UUID.mdファイルが見つかりません"
            exit 1
          fi
          
          # aivis-cloud-api呼び出し（リトライ付き）
          for i in {1..3}; do
            echo "📞 Aivis API呼び出し (試行 $i/3)"
            
            # JSONペイロードを作成（エスケープ問題回避）
            ESCAPED_TEXT=$(echo '${{ inputs.script-text }}' | sed 's/"/\\"/g' | tr '\n' ' ')
            echo "{\"model_uuid\":\"$SELECTED_VOICE_ID\",\"text\":\"$ESCAPED_TEXT\",\"output_format\":\"wav\",\"emotional_intensity\":1.5,\"speaking_rate\":0.9}" > payload.json
            
            HTTP_CODE=$(curl -X POST https://api.aivis-project.com/v1/tts/synthesize \
              -H "Authorization: Bearer ${{ secrets.AIVIS_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d @payload.json \
              --output voice-ending.wav \
              --write-out "%{http_code}" \
              --show-error --silent)
            
            # 一時ファイル削除
            rm -f payload.json
            
            echo "📊 HTTP ステータス: $HTTP_CODE"
            
            if [ "$HTTP_CODE" = "200" ]; then
              echo "✅ API呼び出し成功"
              break
            elif [ $i -eq 3 ]; then
              echo "::error::❌ aivis-cloud-api call failed after 3 attempts (HTTP: $HTTP_CODE)"
              # エラーレスポンスの内容を表示
              if [ -s voice-ending.wav ]; then
                echo "::error::エラーレスポンス内容:"
                head -c 500 voice-ending.wav
              fi
              exit 1
            else
              echo "::warning::⚠️ aivis-cloud-api attempt $i failed (HTTP: $HTTP_CODE), retrying..."
              sleep 30
            fi
          done
          
          # ファイル生成チェック
          echo "📁 ファイル生成チェック"
          if [ -f voice-ending.wav ]; then
            FILE_SIZE=$(stat -c%s voice-ending.wav)
            echo "📏 ファイルサイズ: $FILE_SIZE bytes"
            
            if [ $FILE_SIZE -eq 0 ]; then
              echo "::error::❌ 生成された音声ファイルが空です"
              exit 1
            elif [ $FILE_SIZE -lt 1000 ]; then
              echo "::warning::⚠️ 音声ファイルが小さすぎます (${FILE_SIZE} bytes)"
              echo "::warning::ファイル内容をチェック:"
              head -c 200 voice-ending.wav | hexdump -C | head -5
            else
              echo "✅ 音声ファイル生成成功 (${FILE_SIZE} bytes)"
            fi
            
            # WAVファイルの簡易検証
            if file voice-ending.wav | grep -q "WAVE"; then
              echo "✅ WAVファイル形式確認済み"
            else
              echo "::warning::⚠️ WAVファイル形式ではない可能性があります"
              file voice-ending.wav
            fi
          else
            echo "::error::❌ 音声ファイルが生成されませんでした"
            exit 1
          fi
          
          echo "audio-url=file://$(pwd)/voice-ending.wav" >> $GITHUB_OUTPUT
          echo "audio-file=voice-ending.wav" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Upload voice artifact
        uses: actions/upload-artifact@v4
        with:
          name: voice-ending
          path: voice-ending.wav
          retention-days: 1