name: Radio Planning Module (Minimal)
on:
  workflow_call:
    inputs:
      development-report:
        required: true
        type: string
      topic-focus:
        required: false
        type: string
    outputs:
      script-opening:
        value: ${{ jobs.generate.outputs.script-opening }}
      script-main:
        value: ${{ jobs.generate.outputs.script-main }}
      script-ending:
        value: ${{ jobs.generate.outputs.script-ending }}
      voice-config:
        value: ${{ jobs.generate.outputs.voice-config }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      script-opening: ${{ steps.planning.outputs.script-opening }}
      script-main: ${{ steps.planning.outputs.script-main }}
      script-ending: ${{ steps.planning.outputs.script-ending }}
      voice-config: ${{ steps.planning.outputs.voice-config }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: npm install @anthropic-ai/claude-code
      
      - name: Generate radio scripts with Claude
        id: planning
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "::group::📋 Radio Script Generation"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # 作業ディレクトリ作成
          WORK_DIR="radio-scripts"
          mkdir -p "$WORK_DIR"
          
          # プロンプトの構築
          PROMPT="以下の内容でラジオ番組台本を生成し、JSONファイルに保存してください：

          【開発進捗・最新情報】
          ${{ inputs.development-report }}

          【強調ポイント】
          ${{ inputs.topic-focus || 'なし' }}

          【要件】
          - オープニング: 30秒（明るい挨拶と今日のトピック紹介）
          - メイン: 30秒（内容を分かりやすく解説）  
          - エンディング: 30秒（まとめと次回予告）
          - MC: 20代女性、明るく親しみやすい口調
          - ターゲット: 20-30代の技術に興味がある層

          **重要**: 以下のJSONを \"$WORK_DIR/scripts.json\" ファイルに保存してください：
          {
            \"opening\": \"オープニング台本\",
            \"main\": \"メイン台本\", 
            \"ending\": \"エンディング台本\"
          }"
          
          echo "🚀 Starting Radio Script Generation..."
          echo "📝 Prompt length: ${#PROMPT}"
          
          # Claude Code CLIの実行
          npx @anthropic-ai/claude-code \
            --allowedTools "Write,Edit" \
            --max-turns 10 \
            --verbose \
            --permission-mode "acceptEdits" \
            -p "$PROMPT" || {
              echo "::error::❌ Claude Code CLI execution failed"
              exit 1
            }
          
          # 生成されたJSONファイルの確認と読み込み
          if [ -f "$WORK_DIR/scripts.json" ]; then
            echo "✅ Scripts JSON file generated"
            cat "$WORK_DIR/scripts.json"
            
            # JSONから各セクションを抽出
            if jq empty "$WORK_DIR/scripts.json" 2>/dev/null; then
              echo "✅ Valid JSON response received"
              jq -r '.opening' "$WORK_DIR/scripts.json" | sed 's/^/script-opening=/' >> $GITHUB_OUTPUT
              jq -r '.main' "$WORK_DIR/scripts.json" | sed 's/^/script-main=/' >> $GITHUB_OUTPUT  
              jq -r '.ending' "$WORK_DIR/scripts.json" | sed 's/^/script-ending=/' >> $GITHUB_OUTPUT
            else
              echo "::warning::Invalid JSON format, using fallback scripts"
              echo "script-opening=こんにちは、神威日報ラジオです。本日は${{ inputs.development-report }}についてお伝えします。" >> $GITHUB_OUTPUT
              echo "script-main=${{ inputs.development-report }}の詳細について解説します。${{ inputs.topic-focus || '' }}" >> $GITHUB_OUTPUT
              echo "script-ending=以上、神威日報ラジオでした。また明日お会いしましょう。" >> $GITHUB_OUTPUT
            fi
          else
            echo "::warning::Scripts JSON file not found, using fallback scripts"
            echo "script-opening=こんにちは、神威日報ラジオです。本日は${{ inputs.development-report }}についてお伝えします。" >> $GITHUB_OUTPUT
            echo "script-main=${{ inputs.development-report }}の詳細について解説します。${{ inputs.topic-focus || '' }}" >> $GITHUB_OUTPUT
            echo "script-ending=以上、神威日報ラジオでした。また明日お会いしましょう。" >> $GITHUB_OUTPUT
          fi
          
          echo 'voice-config={"gender":"female","age":"20s"}' >> $GITHUB_OUTPUT
          
          # 音声ID選択とUSE_UUID.mdファイル作成
          echo "::group::🎲 音声ID選択"
          
          # UUID.mdから音声IDリストを定義
          VOICE_IDS=(
            "d1597f96-c12c-4349-9c0e-2342559f30a7"
            "e756b8e4-b606-4e15-99b1-3f9c6a1b2317"
            "27dce2b7-b033-4b82-a722-d18ddba66d94"
            "aa63d66e-92fe-499e-9e0d-15dad4a61d0d"
          )
          
          # ランダムに音声IDを選択
          RANDOM_INDEX=$((RANDOM % ${#VOICE_IDS[@]}))
          SELECTED_VOICE_ID="${VOICE_IDS[$RANDOM_INDEX]}"
          
          # 現在の日付を取得
          CURRENT_DATE=$(date +%Y-%m-%d)
          
          echo "🎯 選択された音声ID: $SELECTED_VOICE_ID"
          echo "📅 日付: $CURRENT_DATE"
          
          # USE_UUID.mdファイルを作成
          mkdir -p radio-workflow/temp
          cat > radio-workflow/temp/USE_UUID.md << EOF
# Selected Voice ID for Radio Production

Date: $CURRENT_DATE
Voice UUID: $SELECTED_VOICE_ID
EOF
          
          echo "✅ USE_UUID.mdファイルを作成しました"
          cat radio-workflow/temp/USE_UUID.md
          
          echo "::endgroup::"