name: BGM Generation Main (Minimal)
on:
  workflow_call:
    outputs:
      bgm-url:
        value: ${{ jobs.generate.outputs.url }}
      bgm-file:
        value: ${{ jobs.generate.outputs.file }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.bgm.outputs.music-url }}
      file: ${{ steps.bgm.outputs.music-file }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Claude Code SDK
        run: |
          echo "📦 Claude Code SDKインストール開始"
          echo "📊 システム情報:"
          echo "OS: $(uname -a)"
          echo "Node.js: $(node --version)"
          echo "npm: $(npm --version)"
          echo ""
          
          # 複数のインストール方法を試す
          echo "🚀 インストール試行1: --no-optional"
          if ! npm install @anthropic-ai/claude-code --no-optional 2>&1; then
            echo "⚠️ 試行1失敗、試行2を実行: --ignore-scripts"
            if ! npm install @anthropic-ai/claude-code --ignore-scripts 2>&1; then
              echo "⚠️ 試行2失敗、試行3を実行: --force"
              echo "⚠️ 試行3も失敗、fseventsエラーを無視してClaude Code CLIを試行"
              npm install @anthropic-ai/claude-code --force 2>/dev/null || echo "⚠️ インストールエラーを無視して続行"
            else
              echo "✅ 試行2成功: --ignore-scripts"
            fi
          else
            echo "✅ 試行1成功: --no-optional"
          fi
          
          echo "📊 インストール結果:"
          ls -la node_modules/@anthropic-ai/ 2>/dev/null || echo "@anthropic-aiディレクトリが見つかりません"
      
      - name: Generate Main BGM with Google Lyria
        id: bgm
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        run: |
          echo "::group::🎵 Main BGM Generation with Google Lyria"
          echo "Starting at: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # MCP設定の確認
          MCP_CONFIG_PATH=".claude/mcp-kamuicode.json"
          MCP_CONFIG_ABS_PATH="$(pwd)/$MCP_CONFIG_PATH"
          
          # プロンプトの構築
          PROMPT="kamuicodeを使って以下のメインBGMを生成してください：

          【BGM要件】
          - 長さ: 15秒（ループ用ベース音楽）
          - スタイル: 落ち着いたトーク向け、控えめ
          - 雰囲気: 集中しやすい、邪魔にならない
          - 楽器: アコースティックギター、軽いピアノ、ソフトシンセ
          - 特徴: 話し声を邪魔しない音量レベル、癒し系

          【生成設定】
          - モデル: Google Lyria (msc-google-lyria)
          - 品質: 高品質
          - フォーマット: WAV

          生成されたBGMのURLを出力してください。"
          
          echo "🚀 Starting Main BGM Generation..."
          echo "📝 Prompt length: ${#PROMPT}"
          
          # Claude Code CLIの実行
          echo "🤖 Claude Code CLI実行開始"
          if [ -f "$MCP_CONFIG_ABS_PATH" ]; then
            echo "✅ MCP設定ファイルが見つかりました"
            
            # Claude Codeの実行とエラーハンドリング
            BGM_RESULT=$(timeout 300 npx @anthropic-ai/claude-code \
              --mcp-config="$MCP_CONFIG_ABS_PATH" \
              --print \
              --verbose \
              "$PROMPT" 2>&1) || {
                CLAUDE_EXIT_CODE=$?
                echo "::warning::⚠️ Claude Code実行失敗 (exit code: $CLAUDE_EXIT_CODE)"
                if [ $CLAUDE_EXIT_CODE -eq 124 ]; then
                  echo "::warning::⚠️ タイムアウトしました (5分)"
                fi
                echo "::warning::エラー出力: $BGM_RESULT"
                BGM_RESULT=""
              }
          else
            echo "::warning::⚠️ MCP設定ファイルが見つかりません: $MCP_CONFIG_ABS_PATH"
            echo "::warning::現在のディレクトリ内容:"
            ls -la || true
            BGM_RESULT=""
          fi
          
          echo "🎵 BGM生成結果 (最初の500文字):"
          echo "$BGM_RESULT" | head -c 500
          echo ""
          
          # 結果からURLを抽出
          MUSIC_URL=$(echo "$BGM_RESULT" | grep -oP 'https://[^\s]+\.(wav|mp3|m4a)' | head -1)
          MUSIC_FILE="bgm-main.wav"
          
          echo "🔍 URL抽出結果: '$MUSIC_URL'"
          
          # URLからファイルをダウンロード
          if [ ! -z "$MUSIC_URL" ] && [[ "$MUSIC_URL" =~ ^https:// ]]; then
            echo "✅ 有効なBGM URLが見つかりました: $MUSIC_URL"
            
            # ダウンロードとファイルチェック
            if curl -L "$MUSIC_URL" -o "$MUSIC_FILE" --max-time 60; then
              if [ -s "$MUSIC_FILE" ]; then
                FILE_SIZE=$(stat -c%s "$MUSIC_FILE")
                echo "✅ BGMファイルダウンロード成功 (${FILE_SIZE} bytes)"
                
                # 音声ファイルの簡易検証
                file "$MUSIC_FILE"
                
                # ffmpegでループ拡張
                sudo apt-get update && sudo apt-get install -y ffmpeg
                if ffmpeg -stream_loop -1 -i "$MUSIC_FILE" -t 30 -ar 44100 -ac 2 -c:a pcm_s16le "bgm-main-30s.wav" -y; then
                  echo "✅ BGMループ拡張成功"
                  echo "music-url=$MUSIC_URL" >> $GITHUB_OUTPUT
                  echo "music-file=bgm-main-30s.wav" >> $GITHUB_OUTPUT
                else
                  echo "::error::❌ ffmpeg処理失敗、フォールバックを使用"
                fi
              else
                echo "::warning::⚠️ ダウンロードされたファイルが空です"
              fi
            else
              echo "::warning::⚠️ BGMファイルのダウンロードに失敗しました"
            fi
          fi
          
          # BGM生成失敗時はワークフローを停止
          if [ ! -f "bgm-main-30s.wav" ] || [ ! -s "bgm-main-30s.wav" ]; then
            echo "::error::❌ BGM生成に失敗しました"
            echo "::error::詳細なエラーログ:"
            echo "::error::Claude Code実行結果: $BGM_RESULT"
            echo "::error::抽出されたURL: '$MUSIC_URL'"
            echo "::error::現在のディレクトリ内容:"
            ls -la || true
            echo "::error::MCP設定ファイル確認:"
            if [ -f "$MCP_CONFIG_ABS_PATH" ]; then
              echo "::error::MCP設定ファイルが存在します: $MCP_CONFIG_ABS_PATH"
              head -20 "$MCP_CONFIG_ABS_PATH" || true
            else
              echo "::error::MCP設定ファイルが見つかりません: $MCP_CONFIG_ABS_PATH"
            fi
            exit 1
          fi
          
          # 最終ファイルチェック
          if [ -f "bgm-main-30s.wav" ]; then
            FINAL_SIZE=$(stat -c%s "bgm-main-30s.wav")
            echo "✅ 最終BGMファイル生成完了 (${FINAL_SIZE} bytes)"
          else
            echo "::error::❌ 最終BGMファイルの生成に失敗しました"
            exit 1
          fi
          
          echo "::endgroup::"
      
      - name: Upload BGM artifact
        uses: actions/upload-artifact@v4
        with:
          name: bgm-main
          path: bgm-main-30s.wav
          retention-days: 1