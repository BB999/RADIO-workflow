name: Audio Mixing Jingle
on:
  workflow_call:
    inputs:
      voice-jingle:
        required: true
        type: string
      bgm-jingle:
        required: true
        type: string
    outputs:
      mixed-audio:
        value: ${{ jobs.mix.outputs.file }}

jobs:
  mix:
    runs-on: ubuntu-latest
    outputs:
      file: ${{ steps.mix.outputs.mixed-file }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Download jingle voice artifact
        uses: actions/download-artifact@v4
        with:
          name: voice-jingle
          path: voice-files
      
      - name: Download jingle BGM artifact
        uses: actions/download-artifact@v4
        with:
          name: bgm-jingle
          path: bgm-files
      
      - name: Mix jingle audio (BGM + Voice with 5s delay)
        id: mix
        run: |
          echo "::group::🎵 ジングル音声ミキシング（BGM 5秒後にセリフ開始）"
          echo "🚀 ミキシング開始: $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          
          # 入力ファイル確認
          VOICE_FILE="voice-files/${{ inputs.voice-jingle }}"
          BGM_FILE="bgm-files/${{ inputs.bgm-jingle }}"
          
          echo "🎤 音声ファイル: $VOICE_FILE"
          echo "🎵 BGMファイル: $BGM_FILE"
          
          # ファイル存在確認
          if [ ! -f "$VOICE_FILE" ]; then
            echo "::error::❌ 音声ファイルが見つかりません: $VOICE_FILE"
            exit 1
          fi
          
          if [ ! -f "$BGM_FILE" ]; then
            echo "::error::❌ BGMファイルが見つかりません: $BGM_FILE"
            exit 1
          fi
          
          # ファイル情報取得
          echo "📊 音声ファイル情報:"
          ls -la "$VOICE_FILE"
          VOICE_DURATION=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 "$VOICE_FILE" 2>/dev/null || echo "0")
          echo "⏱️ 音声長さ: ${VOICE_DURATION}秒"
          
          echo "📊 BGMファイル情報:"
          ls -la "$BGM_FILE"
          BGM_DURATION=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 "$BGM_FILE" 2>/dev/null || echo "0")
          echo "⏱️ BGM長さ: ${BGM_DURATION}秒"
          
          # 5秒ディレイ後の音声終了時間を計算
          VOICE_END_TIME=$(echo "$VOICE_DURATION + 5" | bc -l 2>/dev/null || echo "10")
          echo "📈 音声終了時間（5秒ディレイ含む）: ${VOICE_END_TIME}秒"
          
          # 全体の長さを決定（BGM長さと音声終了時間の長い方）
          if [ $(echo "$BGM_DURATION > $VOICE_END_TIME" | bc -l 2>/dev/null || echo "0") -eq 1 ]; then
            TOTAL_DURATION="$BGM_DURATION"
            echo "📏 全体長さ: ${TOTAL_DURATION}秒（BGMベース）"
          else
            TOTAL_DURATION="$VOICE_END_TIME"
            echo "📏 全体長さ: ${TOTAL_DURATION}秒（音声ベース）"
          fi
          
          # ジングルミキシング処理
          echo "🎚️ ジングルミキシング実行中..."
          echo "  - BGM: 最初から再生、音量調整"
          echo "  - 音声: 5秒後から開始、メイン音量"
          echo "  - フェード: 終了2秒前からフェードアウト"
          
          # 複雑なミキシング処理
          ffmpeg -i "$BGM_FILE" -i "$VOICE_FILE" \
                 -filter_complex "
                   [0:a]volume=0.7,apad[bgm_padded];
                   [1:a]adelay=5000|5000,volume=1.0[voice_delayed];
                   [bgm_padded][voice_delayed]amix=inputs=2:duration=longest:dropout_transition=0.5[mixed];
                   [mixed]afade=t=out:st=$(echo "$TOTAL_DURATION - 2" | bc -l):d=2[faded]
                 " \
                 -map "[faded]" \
                 -t "$TOTAL_DURATION" \
                 -ar 44100 -ac 2 -c:a pcm_s16le \
                 jingle-mixed.wav -y
          
          # ミキシング結果確認
          if [ -f jingle-mixed.wav ]; then
            MIXED_SIZE=$(stat -c%s jingle-mixed.wav)
            FINAL_DURATION=$(ffprobe -v quiet -show_entries format=duration -of csv=p=0 jingle-mixed.wav 2>/dev/null || echo "unknown")
            
            echo "✅ ジングルミキシング完了"
            echo "📏 ファイルサイズ: ${MIXED_SIZE} bytes"
            echo "⏱️ 最終長さ: ${FINAL_DURATION}秒"
            
            # 音量レベル確認
            echo "🔊 音量レベル確認:"
            ffmpeg -i jingle-mixed.wav -filter_complex "volumedetect" -f null - 2>&1 | grep "mean_volume\|max_volume" || true
            
            # WAVファイル形式確認
            if file jingle-mixed.wav | grep -q "WAVE"; then
              echo "✅ WAVファイル形式確認済み"
            else
              echo "::warning::⚠️ WAVファイル形式でない可能性があります"
              file jingle-mixed.wav
            fi
            
          else
            echo "::error::❌ ジングルミキシングに失敗しました"
            exit 1
          fi
          
          echo "mixed-file=jingle-mixed.wav" >> $GITHUB_OUTPUT
          echo "::endgroup::"
      
      - name: Upload mixed jingle artifact
        uses: actions/upload-artifact@v4
        with:
          name: jingle-mixed
          path: jingle-mixed.wav
          retention-days: 1