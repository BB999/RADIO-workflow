name: Voice Generation Main (Minimal)
on:
  workflow_call:
    inputs:
      script-text:
        required: true
        type: string
      voice-config:
        required: true
        type: string
    outputs:
      audio-url:
        value: ${{ jobs.generate.outputs.url }}
      audio-file:
        value: ${{ jobs.generate.outputs.file }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.voice.outputs.audio-url }}
      file: ${{ steps.voice.outputs.audio-file }}
    steps:
      - name: Generate voice with aivis-cloud-api
        id: voice
        run: |
          # aivis-cloud-api呼び出し（リトライ付き）
          for i in {1..3}; do
            RESPONSE=$(curl -X POST https://api.aivis-project.com/v1/tts/synthesize \
              -H "Authorization: Bearer ${{ secrets.AIVIS_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d '{
                "model_uuid": "a59cb814-0083-4369-8542-f51a29e72af7",
                "text": "${{ inputs.script-text }}",
                "output_format": "wav"
              }' --fail --show-error --silent)
            
            if [ $? -eq 0 ]; then
              break
            elif [ $i -eq 3 ]; then
              echo "::error::aivis-cloud-api call failed after 3 attempts"
              exit 1
            else
              echo "::warning::aivis-cloud-api attempt $i failed, retrying..."
              sleep 30
            fi
          done
          
          # Aivis Cloud APIは音声ファイルを直接返すため、レスポンスをファイルに保存
          echo "$RESPONSE" > voice-main.wav
          
          # ファイルサイズをチェック
          if [ ! -s voice-main.wav ]; then
            echo "::error::Generated audio file is empty"
            exit 1
          fi
          
          echo "audio-url=file://$(pwd)/voice-main.wav" >> $GITHUB_OUTPUT
          echo "audio-file=voice-main.wav" >> $GITHUB_OUTPUT